@inject HttpClient _client

<EditForm Model="@booking" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Car: </label>
            <div>
                <InputSelect @bind-Value="booking.CarId" class="form-control">
                    <option value="">-- Select Car --</option>
                    @if (Cars != null)
                    {
                        foreach (var Car in Cars)
                        {
                            <option value="@Car.Id">@Car.CarPlate</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => booking.CarId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="booking.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => booking.CustomerId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Staff: </label>
            <div>
                <InputSelect @bind-Value="booking.StaffId" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">@staff.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => booking.StaffId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Date In: </label>
            <div>
                <InputDate @bind-Value="@booking.RentalStartDate" class="form-control" />
                <ValidationMessage For="@(() => booking.RentalStartDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Date Out: </label>
            <div>
                <InputDate @bind-Value="@booking.RentalEndDate" class="form-control" />
                <ValidationMessage For="@(() => booking.RentalEndDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Pickup Option: </label>
            <div>
                <InputSelect @bind-Value="@booking.PickUpOption" class="form-control">
                    <option value="">-- Select Pickup Option --</option>
                    <option value="Delivery">Delivery</option>
                    <option value="Self Pickup">Self Pickup</option>
                </InputSelect>
                <ValidationMessage For="@(() => booking.PickUpOption)" />
            </div>
        </div>

        @if (booking.PickUpOption == "Self Pickup")
        {
            <div class="form-group">
                <label>Location: </label>
                <div>
                    <InputSelect @bind-Value="@booking.Location" class="form-control">
                        <option value="">-- Select Outlet --</option>
                        <option value="Tampines">Tampines</option>
                        <option value="Bedok">Bedok</option>
                        <option value="Jurong">Jurong</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => booking.Location)" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label>Location: </label>
                <div>
                    <InputText @bind-Value="@booking.Location" class="form-control" />
                    <ValidationMessage For="@(() => booking.Location)" />
                </div>
            </div>
        }

        <br />
        <br />
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="bookings" />

</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Booking booking { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Car>? Cars;
    private IList<Customer>? Customers;
    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Cars = await _client.GetFromJsonAsync<List<Car>>($"{Endpoints.CarsEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }
}