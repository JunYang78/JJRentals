@inject HttpClient _client

<EditForm Model="@car" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Model: </label>
            <div>
                <InputSelect @bind-Value="car.ModelId" class="form-control">
                    <option value="">-- Select Model --</option>
                    @if (Models != null)
                    {
                        foreach (var model in Models)
                        {
                            <option value="@model.Id">@model.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => car.ModelId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Outlets: </label>
            <div>
                <InputSelect @bind-Value="car.OutletId" class="form-control">
                    <option value="">-- Select Outlet --</option>
                    @if (Outlets != null)
                    {
                        foreach (var outlet in Outlets)
                        {
                            <option value="@outlet.Id">@outlet.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => car.OutletId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Year: </label>
            <div>
                <InputNumber @bind-Value="@car.Year" class="form-control" />
                <ValidationMessage For="@(() => car.Year)" />
            </div>
        </div>

        <div class="form-group">
            <label>License Plate Number: </label>
            <div>
                <InputText @bind-Value="@car.CarPlate" class="form-control" />
                <ValidationMessage For="@(() => car.CarPlate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Daily Rate: </label>
            <div>
                <InputNumber @bind-Value="@car.CarRentPerDay" class="form-control" />
                <ValidationMessage For="@(() => car.CarRentPerDay)" />
            </div>
        </div>

        <div class="form-group">
            <label>Hourly Rate: </label>
            <div>
                <InputNumber @bind-Value="@car.CarRentPerHour" class="form-control" />
                <ValidationMessage For="@(() => car.CarRentPerHour)" />
            </div>
        </div>

        <div class="form-group">
            <label>Colour: </label>
            <div>
                <InputText @bind-Value="car.Colour" class="form-control" />
                <ValidationMessage For="@(() => car.Colour)" />
            </div>
        </div>


        <div class="form-group">
            <label>Availability: </label>
            <InputCheckbox @bind-Value="@car.Availability" class="form-check-input" />
            <ValidationMessage For="@(() => car.Availability)" />
        </div>

        <br />
        <br />
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="cars" />

</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Car car { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Outlet>? Outlets;
    private IList<Model>? Models;

    protected async override Task OnInitializedAsync()
    {
        Outlets = await _client.GetFromJsonAsync<List<Outlet>>($"{Endpoints.OutletsEndpoint}");
        Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
    }
}